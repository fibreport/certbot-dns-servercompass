# exclude a variety of directories we do not want to process
exclude = [
    ".env",
    ".devcontainer",
    ".venv",
    "venv",
    ".idea",
    ".git",
    ".eggs",
    ".vscode",
    ".ruff_cache",
]

# adjusted line length and indention
line-length = 160
indent-width = 4

# assume python 3.11
target-version = "py311"

[lint]
# F = Pyflakes (https://pypi.org/project/pyflakes/)
# E, W = pycodestyle (https://pypi.org/project/pycodestyle/)
# N = pep8-naming
# UP = pyupgrade
# A = flake8-builtins
# C4 = flake8-comprehensions
# RET = flake8-return
# T20 = flake8-print
# Q = flake8-quotes
# RSE = flake8-raise
# TCH = flake8-type-checking
# ERA = eradicate
# C90 - mccabe
# DJ = flake8-django (https://pypi.org/project/flake8-django/)
select = [
    "F",
    "E",
    "W",
    "N",
    "A",
    "C4",
    "RET",
    "T20",
    "Q",
    "RSE",
    "TCH",
    "ERA",
    "C90",
    "DJ",
]

ignore = ["E501", "E722", "A003"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 35

